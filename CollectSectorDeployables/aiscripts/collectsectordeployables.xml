<?xml version="1.0" encoding="utf-8" ?>
 <!--   -->
<aiscript name="collectsectordeployables" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="1">
  <order id="CollectSectorDeployables" name="CollectSectorDeployables" description="Collect all deployables in from all factions" category="navigation" infinite="true">
    <params>
      <param name="collect_resource_probe" type="bool" default="true" text="Collect Resource Probes" comment="" />
      <param name="collect_beacon" type="bool" default="true" text="Collect Beacons" comment="" />
      <param name="collect_satellite" type="bool" default="true" text="Collect Satellites" comment="" />
      <param name="collect_mine" type="bool" default="true" text="Collect Mines" comment="" />
      <param name="collect_laser_tower" type="bool" default="true" text="Collect Laser Towers" comment="" />

      <param name="near" type="bool" default="true" text="Nearest First" comment="" />
      
      <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
        <input_param name="truevalue" value="100"/>
      </param>

      <param name="radius" type="length" default="this.ship.maxradarrange" text="Radius" comment="Radius">
        <input_param name="min" value="1km"/>
        <input_param name="max" value="[this.ship.maxradarrange , 20km].max"/>
        <input_param name="step" value="1km"/>
      </param>
    </params>

    <skill min="0"/> 

    <requires>
      <match shiptype="shiptype.lasertower" negate="true"/>
    </requires>

    <location object="$destination.{1}" position="$destination.{2}" condition="$destination.{1} and $destination.{2}"/>

  </order>

  <interrupts>
    <handler ref="SectorChangeHandler"/>
    <handler ref="AttackHandler" />
    <handler ref="MissileLockHandler" />
    <handler ref="ScannedHandler" />
    <handler ref="InspectedHandler"/>
    <handler ref="FoundAbandonedHandler"/>
    <handler ref="FoundLockboxHandler"/>
    <handler ref="ResupplyHandler" />
    <handler ref="JobRemoveRequestHandler" />
    <handler ref="TargetInvalidHandler"/>
  </interrupts>
  
  <init>

  </init>
    
  <attention min="unknown">
    <actions>
      
      <!--  -->
      <label name="prestart"/>

      <debug_to_file name="this.ship.idcode" directory="'CollectSectorDeployables'" append="true"  chance="$debugchance"
		     text="'\ncollectdeployables begun %1  '.[player.age ]" />

      <set_value name="$targetsector" exact="$destination.{1}"/>
      <set_value name="$destpos" exact="$destination.{2}"/>
      
      <!--  -->
      <label name="start"/>
      
      <!-- If the ship has no more space for deployables -->
      <do_if value="this.ship.ammostorage.deployable.free lt 1">
	      <resume label="finish"/>
      </do_if>

      <set_order_syncpoint_reached order="this.ship.order" />

      <get_safe_pos result="$pos" sector="$targetsector" value="$destpos" radius="this.assignedcontrolled.size" max="$radius"/>

      <!-- flyto player specified location -->
      <do_if value="this.sector != $targetsector or this.ship.distanceto.[$destination.{1},$destination.{2}] gt $radius">
	      <debug_to_file name="this.ship.idcode" directory="'CollectSectorDeployables'" append="true" chance="$debugchance"
		       text="' cdpl:flyto dest'" /> 

        <run_script name="'move.generic'">
          <param name="destination" value="$targetsector"/>
          <param name="position" value="$pos"/>
          <param name="debugchance" value="$debugchance"/>
        </run_script>
	      <wait min="10ms" max="1s" />
      </do_if>

      <!-- get targets -->
      <label name="get_sector_targets"/>
        <do_if value="$targetsector != this.sector">
          <resume label="start"/>
        </do_if>    
      <set_value name="$collectableList" exact="[]" />
      <do_if value="$collect_resource_probe">
	      <append_to_list name="$collectableList" exact="class.resourceprobe" />
      </do_if>
      <do_if value="$collect_beacon">
	      <append_to_list name="$collectableList" exact="class.navbeacon" />
      </do_if>
      <do_if value="$collect_satellite">
	      <append_to_list name="$collectableList" exact="class.satellite" />
      </do_if>
      <do_if value="$collect_mine">
	      <append_to_list name="$collectableList" exact="class.mine" />
      </do_if>

      <!-- List of the above collectable objects -->
      <find_object groupname="$targetgroup" class="$collectableList" space="$targetsector" multiple="true" />
      <wait min="3ms" max="11ms" />

      <do_if value="$collect_laser_tower">
        <!-- Start new class list -->
        <set_value name="$collectableList" exact="[class.ship_xs]" />
        <!-- Check to see if current ship can collect small ships -->
        <find_dockingbay name="$sdocks" object="this.ship" multiple="true">
          <match_dock size="tag.dock_s" free="true"/>
        </find_dockingbay>
        <do_if value="@$sdocks.count" >
            <!-- Add small ships to the list to include the T2 Lasertowers -->
        	  <append_to_list name="$collectableList" exact="class.ship_s" />
        </do_if>

        <!-- Include Lasertowers to the Target list -->
        <find_object groupname="$targetgroup" append="true" space="$targetsector" multiple="true" class="$collectableList" >
          <match shiptype="shiptype.lasertower"/>
        </find_object>
        <wait min="3ms" max="11ms" />
      </do_if>

      <label name="getone" />
      <!-- select a target -->

      <do_if value="$near">
        <!-- nearest target; from move.collect.ship.smallship as is much else here -->
        <set_value name="$nearest" exact="null"/>
        <set_value name="$nearestdist" exact="null"/>
        <do_all exact="$targetgroup.count" counter="$i">
          <!-- First in list -->
          <do_if value="not $nearest">
            <set_value name="$nearest" exact="$targetgroup.{$i}"/>
            <set_value name="$nearestdist" exact="$targetgroup.{$i}.distanceto.{this.ship}"/>
          </do_if>
          <do_else>
              <do_if value="$targetgroup.{$i}.distanceto.{this.ship} lt $nearestdist">
                <set_value name="$nearest" exact="$targetgroup.{$i}"/>
                <set_value name="$nearestdist" exact="$targetgroup.{$i}.distanceto.{this.ship}"/>
              </do_if>
          </do_else>
        </do_all>
        <set_value name="$target" exact="$nearest" />
      </do_if>
      <do_else>
        <set_value name="$target" exact="$targetgroup.{1}" />
      </do_else>
      

      <--ToDo
	   If owned: continue to collect
	   else  Approach to hack distance.
	         Calculate success rate based on crew skill
                    (possibly faction standing?
	               Higher standings means lower security conditions, easier hack.
                       Lower standings means higher security conditions, ai systems on alert
                    )
	         if failure, chance of causing hostile reaction.  ei lasertower attacks.
	         succsess, changes ownership to player.
	   Collect:
	      Check Teleport research
	      If true, check level.  Calculate teleporter distance based on level
	        Trigger teleport collect.
	      if not, then move to collect as normal.
	-->
	      
	      
      <!-- done  -->
      <label name="finish" />

      <run_script name="'move.generic'">
        <param name="destination" value="$targetsector"/>
        <param name="position" value="$destpos"/>
        <param name="debugchance" value="$debugchance"/>
      </run_script>
      <wait min="10ms" max="1s" />

      <debug_to_file name="this.ship.idcode" directory="'CollectSectorDeployables'" append="true" chance="$debugchance"
		     text="' cdpl:done'" /> 

      <do_if value="this.isplayerowned and not this.isclass.computer and not this.assignedcontrolled.nextorder and (not this.assignedcontrolled.commander or (this.assignedcontrolled.commander == player.occupiedship)) and notification.npc_await_orders.active">
        <!-- Player notification -->
        <set_value name="$speakline" exact="10304" comment="Awaiting orders."/>
        <run_script name="'player.interaction'">
          <param name="Line" value="$speakline"/>
          <param name="MaxQueueDelay" value="10s"/>
          <param name="caption" value="'%s (%s)'.[this.assignedcontrolled.knownname, this.assignedcontrolled.idcode]"/>
          <param name="interactive" value="false"/>
          <param name="debugchance" value="$debugchance"/>
        </run_script>
      </do_if>

      <do_if value="this.ship.order == this.ship.defaultorder" >
	<cancel_order order="this.ship.defaultorder"/>
      </do_if>
    </actions>
  </attention>
</aiscript>
